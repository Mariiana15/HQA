{"ast":null,"code":"import _ from \"lodash\";\nimport { FETCH_STREAM, FETCH_STREAMS, CREATE_STREAM, EDIT_STREAM, DELETE_STREAM } from \"../actions/types\";\n\nconst streamReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_STREAMS:\n      return { ...state,\n        ..._.mapKeys(action.payload, \"id\")\n      };\n\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default streamReducer;","map":{"version":3,"sources":["/home/mariana/Documents/TFM/Frontend_React/HQA/src/reducers/streamReducer.js"],"names":["_","FETCH_STREAM","FETCH_STREAMS","CREATE_STREAM","EDIT_STREAM","DELETE_STREAM","streamReducer","state","action","type","mapKeys","payload","id","omit"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,aALF,QAMO,kBANP;;AAQA,MAAMC,aAAa,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,aAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAY,WAAGP,CAAC,CAACU,OAAF,CAAUF,MAAM,CAACG,OAAjB,EAA0B,IAA1B;AAAf,OAAP;;AACF,SAAKV,YAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACF,SAAKR,aAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACF,SAAKP,WAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAY,SAACC,MAAM,CAACG,OAAP,CAAeC,EAAhB,GAAqBJ,MAAM,CAACG;AAAxC,OAAP;;AACF,SAAKN,aAAL;AACE,aAAOL,CAAC,CAACa,IAAF,CAAON,KAAP,EAAcC,MAAM,CAACG,OAArB,CAAP;;AACF;AACE,aAAOJ,KAAP;AAZJ;AAcD,CAfD;;AAgBA,eAAeD,aAAf","sourcesContent":["import _ from \"lodash\";\nimport {\n  FETCH_STREAM,\n  FETCH_STREAMS,\n  CREATE_STREAM,\n  EDIT_STREAM,\n  DELETE_STREAM,\n} from \"../actions/types\";\n\nconst streamReducer = (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_STREAMS:\n      return { ...state, ..._.mapKeys(action.payload, \"id\") };\n    case FETCH_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n    case CREATE_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n    case EDIT_STREAM:\n      return { ...state, [action.payload.id]: action.payload };\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n    default:\n      return state;\n  }\n};\nexport default streamReducer;\n"]},"metadata":{},"sourceType":"module"}